PROJECT="java-runtimes"
RESOURCE_GROUP="rg-${PROJECT}"
LOCATION="eastus"
TAG="java-runtimes"

LOG_ANALYTICS_WORKSPACE="logs-java-runtimes"
CONTAINERAPPS_ENVIRONMENT="env-java-runtimes"

# If you're using a dev container, you should manually set this to
# a unique value (like your name) to avoid conflicts with other users.
UNIQUE_IDENTIFIER=$(whoami)
REGISTRY="javaruntimesregistry${UNIQUE_IDENTIFIER}"
IMAGES_TAG="1.0"

POSTGRES_DB_ADMIN="javaruntimesadmin"
POSTGRES_DB_PWD="java-runtimes-p#ssw0rd-12046"
POSTGRES_DB_VERSION="13"
POSTGRES_SKU="Standard_B2s"
POSTGRES_TIER="Burstable"
POSTGRES_DB="db-stats-${UNIQUE_IDENTIFIER}"
POSTGRES_DB_SCHEMA="stats"
POSTGRES_DB_CONNECT_STRING="jdbc:postgresql://${POSTGRES_DB}.postgres.database.azure.com:5432/${POSTGRES_DB_SCHEMA}?ssl=true&sslmode=require"

QUARKUS_APP="quarkus-app"
MICRONAUT_APP="micronaut-app"
SPRING_APP="springboot-app"

### Letâ€™s also retrieve the Log Analytics Client ID and client secret and store them in environment variables:

LOG_ANALYTICS_WORKSPACE_CLIENT_ID=$(
  az monitor log-analytics workspace show \
    --resource-group "$RESOURCE_GROUP" \
    --workspace-name "$LOG_ANALYTICS_WORKSPACE" \
    --query customerId  \
    --output tsv | tr -d '[:space:]'
)
echo "LOG_ANALYTICS_WORKSPACE_CLIENT_ID=$LOG_ANALYTICS_WORKSPACE_CLIENT_ID"

LOG_ANALYTICS_WORKSPACE_CLIENT_SECRET=$(
  az monitor log-analytics workspace get-shared-keys \
    --resource-group "$RESOURCE_GROUP" \
    --workspace-name "$LOG_ANALYTICS_WORKSPACE" \
    --query primarySharedKey \
    --output tsv | tr -d '[:space:]'
)
echo "LOG_ANALYTICS_WORKSPACE_CLIENT_SECRET=$LOG_ANALYTICS_WORKSPACE_CLIENT_SECRET"


## Get the URL of the Azure Container Registry and set it to the REGISTRY_URL variable with the following command:
REGISTRY_URL=$(
  az acr show \
    --resource-group "$RESOURCE_GROUP" \
    --name "$REGISTRY" \
    --query "loginServer" \
    --output tsv
)

echo "REGISTRY_URL=$REGISTRY_URL"


QUARKUS_HOST=$(
  az containerapp show \
    --name "$QUARKUS_APP" \
    --resource-group "$RESOURCE_GROUP" \
    --query "properties.configuration.ingress.fqdn" \
    --output tsv \
)
echo "QUARKUS_HOST=$QUARKUS_HOST"

MICRONAUT_HOST=$(
  az containerapp show \
    --name "$MICRONAUT_APP" \
    --resource-group "$RESOURCE_GROUP" \
    --query "properties.configuration.ingress.fqdn" \
    --output tsv \
)
echo "MICRONAUT_HOST=$MICRONAUT_HOST"

SPRING_HOST=$(
  az containerapp show \
    --name "$SPRING_APP" \
    --resource-group "$RESOURCE_GROUP" \
    --query "properties.configuration.ingress.fqdn" \
    --output tsv \
)
echo "SPRING_HOST=$SPRING_HOST"

POSTGRES_CONNECTION_STRING=$(
  az postgres flexible-server show-connection-string \
    --server-name "$POSTGRES_DB" \
    --admin-user "$POSTGRES_DB_ADMIN" \
    --admin-password "$POSTGRES_DB_PWD" \
    --database-name "$POSTGRES_DB_SCHEMA" \
    --query "connectionStrings.jdbc" \
    --output tsv
)

echo "POSTGRES_CONNECTION_STRING=$POSTGRES_CONNECTION_STRING"